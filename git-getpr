#!/usr/bin/env python3

from argparse import ArgumentParser
import subprocess
import sys

# fdfb1b37af410cf5d7553bfb9c47d9d6f24d58d0	refs/pull/10868/head
# a915d8672599775199931f7b75589035fcb07eea	refs/pull/10868/merge

def parser():
    p = ArgumentParser()
    p.add_argument("pr_number", metavar=
    "PR-number", help="Number of the PR you want to fetch", type=int)
    p.add_argument("--remote", default="origin", help="name of the remote")
    p.add_argument('--base-branch', '-M', default="main", help="Name of branch against which the pr is based")
    return p

def git(*args, check=True):
    args = ["git"] + list(args)
    res = subprocess.run(args, check=check, stdout=subprocess.PIPE, text=True)
    return res.stdout.rstrip()


if __name__ == '__main__':
    args = parser().parse_args()
    pr = args.pr_number
    remote_ref = f"pull/{pr}/head"
    local_ref = f"pr/{pr}"
    git("fetch", args.remote, f"{remote_ref}:{local_ref}", args.base_branch)
    # do we need --set-upstream-to?
    merge_base = git("merge-base", local_ref, f"{args.remote}/{args.base_branch}")
    git("branch", "--force", f"pr/{pr}-base", merge_base)
    diff = git("diff", "-b", "--diff-filter=d", merge_base, local_ref)
    with open(f"DIFF-{pr}", "w") as fh:
        print(diff, file=fh)
    log = git("log", "--oneline", f"{merge_base}..{local_ref}")
    print(log, file=sys.stderr)
