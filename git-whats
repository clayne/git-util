#!/usr/bin/perl

$ENV{GIT_GET_NO_NEWLINE} = 1;

sub usage {
  die "Usage:\tgit-whats [commit-ish]
	git-whats --set 'description'
	git-whats --clear\n";
}

use Getopt::Long;
my $message;
my $clear;
GetOptions ("set=s"  => \$message,
            "clear"  => \$clear,
           )
  or usage();

if ($clear) {
  # --clear is incompatible with --set MESSAGE
  usage() if defined($message);
  $message = "";
}

usage() if @ARGV && @ARGV != 1;
my $branch = shift;
$branch =  qx{git get current-branch-name}
  if ! defined($branch) || $branch eq "HEAD";

my $key = config_key($branch);

if (defined $message) {
  die "Detached HEAD\n" unless $branch =~ /\S/;
  if ($message eq "") {
    exit system(qw(git config --unset), $key);
  } else {
    exit system(qw(git config), $key, $message);
  }
} else {
  # Deal with arbitrary commit-ish some other time
  system(qw(git config), config_key($branch));
}

sub config_key {
  my ($ref) = @_;
  return "branch.$ref.what";
}

sub usage {
  die "Usage: git-whats [--set=...] [--clear] [branch]\n";
}
